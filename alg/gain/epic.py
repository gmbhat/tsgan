# import pandas as pd
# from pandas import DataFrame, read_csv
# import numpy as np
# import matplotlib.pyplot as plt

# # Here you put your code to read the CSV-file into a DataFrame df
# df = read_csv('output.csv')

# # xs = np.array(df[df.columns[0::0]]) # Use values from odd numbered columns as x-values
# # ys = np.array(df[df.columns[1::1]]) # Use values from even numbered columns as y-values

# # for i in range(2): 
# #     plt.plot(xs[:,i], ys[:,i], marker='o', label=df.columns[0::2][i][-3:]+'"') 
# #     for j in range(len(xs[:,i])):
# #         plt.annotate(df.index[j], # Annotate every plotted point with its Spectral class
# #                      xy = (xs[:,i][j],ys[:,i][j]),
# #                      xytext = (0, -6),
# #                      textcoords = 'offset points',
# #                      va = 'top',
# #                      ha = 'center',
# #                      clip_on = True)

# # plt.title('Spectral classes')
# # plt.xlabel('Limiting Magnitude')
# # plt.ylabel('Exposure Time')

# # plt.grid(alpha=0.4)    
# # plt.yscale('log')
# # plt.legend(loc='best', title='Series')
# # plt.show()

# import datetime
# import matplotlib.pyplot as plt
# import pandas as pd

# df = pd.read_csv("./output.csv")


# def make_a_real_date(the_row):
#     year = the_row[0]
#     month = the_row[1]
#     day = the_row[2]
#     hour = the_row[3]
#     minute = the_row[4]
#     price = the_row[5]  # although we don't care about price for now
#     # https://docs.python.org/2/library/datetime.html#datetime-objects
#     return datetime.datetime(year, month, day, hour, minute)


# # df["real_datetime"] = df.apply(make_a_real_date, axis=1)

# # df = df.drop(["year", "month", "day", "hour", "minute"], axis=1)

# # df.plot()
# # plt.show()

# year = df[1][0]
# month = df[1][1]

# df.plot()
# plt.show()

# import pandas as pd
# import matplotlib.pyplot as plt

# l = list(range(1,71))
# t = pd.DataFrame({"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"y": [1.0825584,1.3266973,1.657506,2.4793653,3.854551,4.30045,6.4588428,7.146493,7.9448028,8.573647,7.9979444,7.7164364,6.2332816,4.8849473,3.6157124,2.703472,2.0191329,1.5764613,1.2763542,1.1040986,1.0583096,0.9815862,0.9078615,0.8804797,0.87077314,0.86114275,0.81306446,0.85857403,0.79173344,0.798447,0.78108597,0.789701,0.7871168,0.78412855,0.74990046,0.7545988,0.7733224,0.7908702,0.818065,0.76997745,0.7665226,0.7067286,0.75456685,0.75671124,0.7547177,0.758141,0.7254584,0.74821347,0.8208901,0.7141687,0.71259964,0.7693546,0.7738879,0.72370565,0.7755938,0.71817684,0.7011635,0.7257188,0.7401871,0.78043526,0.77773833,0.7683067,0.717924,0.7647383,0.76864815,0.7474518,0.6869361,0.73871386,0.75823027,0.7983355,0.77601576], "y":[1.1239458,1.1375054,1.1617044,1.183022,1.2455761,1.3455426,1.3959008,1.4704287,1.5016592,1.5400327,1.486001,1.421941,1.3811891,1.2989781,1.2171158,1.180101,1.1600422,1.146139,1.1640933,1.1575953,1.1630213,1.1910229,1.2023181,1.1952691,1.2060392,1.1881633,1.1621419,1.1809108,1.1759089,1.1643739,1.1648402,1.1739743,1.1806505,1.174413,1.1754724,1.1554466,1.1771928,1.1680753,1.1895907,1.1813592,1.1955072,1.171645,1.1967748,1.1872578,1.1909467,1.1868917,1.2107815,1.1816393,1.2069721,1.1899116,1.1902795,1.1843421,1.1942662,1.1855733,1.1799222,1.1770818,1.1881716,1.1895195,1.1941687,1.1955359,1.1910295,1.190025,1.1903958,1.188229,1.1753432,1.169861,1.1872777,1.1892289,1.1894196,1.1800611,1.1818476]})
# t.to_csv('test_imputed_Ax.csv', sep=',', index=False)

# df = pd.read_csv('test_imputed_Ax.csv', sep=',')

# df.plot(x="x",y="y", label="csv")

# plt.ylabel('y')
# plt.title('pls let this')
# plt.show()

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

l1 = [1.0825584,1.3266973,1.657506,2.4793653,3.854551,4.30045,6.4588428,7.146493,7.9448028,8.573647,7.9979444,7.7164364,6.2332816,4.8849473,3.6157124,2.703472,2.0191329,1.5764613,1.2763542,1.1040986,1.0583096,0.9815862,0.9078615,0.8804797,0.87077314,0.86114275,0.81306446,0.85857403,0.79173344,0.798447,0.78108597,0.789701,0.7871168,0.78412855,0.74990046,0.7545988,0.7733224,0.7908702,0.818065,0.76997745,0.7665226,0.7067286,0.75456685,0.75671124,0.7547177,0.758141,0.7254584,0.74821347,0.8208901,0.7141687,0.71259964,0.7693546,0.7738879,0.72370565,0.7755938,0.71817684,0.7011635,0.7257188,0.7401871,0.78043526,0.77773833,0.7683067,0.717924,0.7647383,0.76864815,0.7474518,0.6869361,0.73871386,0.75823027,0.7983355,0.77601576]
l2 = [1.1239458,1.1375054,1.1617044,1.183022,1.2455761,1.3455426,1.3959008,1.4704287,1.5016592,1.5400327,1.486001,1.421941,1.3811891,1.2989781,1.2171158,1.180101,1.1600422,1.146139,1.1640933,1.1575953,1.1630213,1.1910229,1.2023181,1.1952691,1.2060392,1.1881633,1.1621419,1.1809108,1.1759089,1.1643739,1.1648402,1.1739743,1.1806505,1.174413,1.1754724,1.1554466,1.1771928,1.1680753,1.1895907,1.1813592,1.1955072,1.171645,1.1967748,1.1872578,1.1909467,1.1868917,1.2107815,1.1816393,1.2069721,1.1899116,1.1902795,1.1843421,1.1942662,1.1855733,1.1799222,1.1770818,1.1881716,1.1895195,1.1941687,1.1955359,1.1910295,1.190025,1.1903958,1.188229,1.1753432,1.169861,1.1872777,1.1892289,1.1894196,1.1800611,1.1818476]
l3 = [2.5545483,2.6213582,2.7673652,2.9674277,3.2510774,3.6751027,3.9754443,4.265537,4.4290442,4.3715496,4.29381,3.9260738,3.6348758,3.2963293,3.0674345,2.6907218,2.5558956,2.4813657,2.514843,2.4860153,2.5249429,2.536914,2.5621297,2.5573275,2.53063,2.543306,2.5306833,2.4995193,2.5072865,2.5269766,2.5264027,2.4917238,2.49614,2.5031185,2.4836497,2.4761713,2.4852355,2.4780626,2.4896262,2.482037,2.483151,2.4872205,2.5048015,2.5180936,2.5120354,2.4937809,2.512048,2.4875395,2.4864576,2.4954796,2.5237803,2.4745796,2.4622896,2.496288,2.4870646,2.5016325,2.5143554,2.5063174,2.4700904,2.488916,2.500702,2.4721854,2.4760334,2.4790974,2.4729025,2.4667294,2.5302598,2.4654481,2.4929264,2.4754753,2.4955995]
# Data
df=pd.DataFrame({'x_values': range(1,72), 'reference': l1, 'imputed': l2, 'missing': l3 })
 
# multiple line plots
plt.plot( 'x_values', 'reference', data=df, marker='o', markerfacecolor='blue', markersize=12, color='skyblue', linewidth=4)
plt.plot( 'x_values', 'imputed', data=df, marker='', color='olive', linewidth=2)
plt.plot( 'x_values', 'missing', data=df, marker='', color='olive', linewidth=2, linestyle='dashed')#, label="toto")
# show legend
plt.legend()

# show graph
plt.show()